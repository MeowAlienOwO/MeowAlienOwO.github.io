---
layout: post
title: "Link Layer"
date: "2015-05-15 01:44:58 +0800"
modified: 
description: "Notes for link layer"
categories: [Computer Science, Network]
tags: [link layer, cs, notes]
image:
  feature: 50285937.jpg
  credit: 雲龍型三姉妹 | れっれれ＠お仕事募集中 [pixiv] 
  creditlink: http://www.pixiv.net/member_illust.php?mode=medium&illust_id=50285937
comments: 
---

如你所见，还是复习资料……资源绝赞燃烧中，我要老李……


# 简介与服务
连接层，又称为数据链路层（Data Link），或称为网络介质层（Network
In-terface），也就是网络的基础建设，广泛应用于通信网的安全技术中，处理
通信与授权控制的核心协议。可在以太网（Ethernet）、光纤（Fiber）、无线
网络（Wireless）、帧传送（Frame Relay）或点对点（PPP）物理网络中为网络
层提供数据传送服务，连接层最重要的任务在于传送及接收物理层所传送的光电
信号。 --度娘

## 连接层服务

连接层包括如下服务：

### 帧与链接入口
数据包被封装成帧。加入了头部(header)跟追踪部(trailer)。同时，如果是共
享介质的话，还有信道入口的信息。MAC地址被用在帧头部来分别源地址与目标
地址。这同IP地址不同。

### 相邻节点之间的可信传递(relable delivery between adjacent nodes)
很少用于比特错误很少出现的链接，无线连接拥有更高的错误率。

### 流控制(flow control)
决定相邻网络节点之间的传输速度

### 错误检测(error detection)
错误由噪音与信号衰减所带来，接收方发现错误存在后或者请求重新传输，
或者直接丢失帧。

### 错误校正(error correction)
接收方收到信息并且发现错误后，直接改正错误而不是请求重新传输或者丢包。

### 双向传输与半双向传输
半双向传输只能在某一时间传输一个方向，而双向传输可以同时传输两个方向


## 连接层实现相关
连接层被每个网络主机所实现，在接收机(adaptor)，或者说网路接口卡
(network interface card，NIC，网卡)或者芯片当中实现，比如以太网卡，
802.11卡。以太网芯片集等等。它通过主机系统，将一些硬件，软件与固件组
合起来。

### 信息传输流程

发送者：

- 将数据封装进帧
- 加入错误校验位

接收者：

- 寻找错误并作出处理
- 解包，传递给接收的上一层处理

# 错误检测与校正

## 传输错误

许多网络复杂度的增加由于接口的敏感性，而这些敏感性可以导致：

- 传输数据丢失或者改变
- 出现随机数据

## 错误检测(error detection)

发送者包含一些额外的信息来总结原来的数据信息， 
接收者收到了数据以后检测这些额外的信息。之后，
接收者需要决定接下来是否要进行错误校正或者请求重新传输。

错误校验码：EDC = Error Detection(Correction) Bits

使用错误校验码并不是百分之百可靠的。

### 奇偶校验位(parity checking)

计算数据中1的数量，然后加入一个额外的比特位奇偶校验来进行奇偶校验。

该方法简单，但是只能检测很少的一部分错误。我们使用校验和(checksum)与循
环冗余校验码(cyclic redundancy checks)来进行检测。

### 校验和(checksum)

将数据分成若干个段，视之为整数，进行加和，储存结果。通常会使用16位与32
位校验和，而且通常对整个包进行校验和计算。

校验和通常会为数据增加16或者32位，而计算负荷只是简单的加法操作。相对的，
校验和有可能会存在一些未发现的错误。

### 循环冗余检测(cyclic redundancy check)
循环冗余检测比校验和更加强大，可以检测更多的错误，它是基于二进制除法的。

发送方希望发送$D$,一个长度为$d$的数据，发送与接收双方约定一个生成器
$G$,其长度为$r + 1$。

发送者在原有数据后加入一个$R$，使得$DR$恰好在二进制除法下被$G$所整除。
接收者进行反向操作并且检查余数是否为0。




# 多址接入协议(Multiple Access Protocols)

解决问题：

- 单个共享的广播信道
- 两个或更多的节点同时进行传输活动，可能导致碰撞(collision)发生

多址接入协议使用分布式算法来决定节点如何共享信道。

## 一个理想的协议

假设广播信道以$R$比特率进行传输。

理想方案是当一个节点希望传输时，它可以以$R$比特率传输。
当$M$个节点希望传输时，每个节点可以以平均$R/M$的比特率传输。
同时完全的去中心化：没有节点用来组织传输，不需要进行时钟同步/时间段同步等。

## MAC协议

### 信道分配(channel partitioning)

将信道分解为小的"碎片"(pieces)，比如时间段，频率，编码等等，将每个碎片
互斥地分配给节点。前述的FDM与TDM方法就属于这一种。

### 随机接入(random access)

不分解信道，允许碰撞发生，发生后从碰撞中恢复。

### 轮流("taking turns")

轮流方法指的是节点轮流占用信道，但是节点需要传输较长的信息可以使用更长
的时间。从中心站点得到权限，包括令牌(token)传输。

典型例子如蓝牙，FDDI，令牌环(token ring)等。

## 载波侦听多路访问：CSMA(carrier sence multiple access)

CSMA在传播之前监听：

- 如果信道空闲，则将整一帧传输；
- 如果信道忙碌，则推迟传输。

来自百度百科：
采用分布式控制方法，附接总线的各个结点通过竞争的方式，获得总线的使用权。
只有获得使用权的结点才可以向总线发送信息帧，该信息帧将被附接总线的所有结点感知。包括以下三个要点：载波侦听——发送结点在发送信息帧之前，必须侦听媒体是否处于空闲状态；多路访问——具有两种含义，既表示多个结点可以同时访问媒体，也表示一个结点发送的信息帧可以被多个结点所接收；冲突检测——发送结点在发出信息帧的同时，还必须监听媒体，判断是否发生冲突（同一时刻，有无其他结点也在发送信息帧）。IEEE 802.3或者OSI 8802/3定义了CSMA/CD的标准。

关于冲突检测：

b其概念时间模型分为三个时期：传输周期，竞争周期和空闲周期.
值得一提的是，监听的机制：传输数据时，他的硬件进行监听电缆，如果读回来的信息与发送的不一致，便知发送冲突了.这里，当然需要一种特殊的信号编码方案，能够检测出两个OV信号冲突.（或者在此冲突下，故意不检测，因信号没有损坏）
有线网中，冲突检测的最核心内容是 帧碎片（即检测到网络中有小于这个大小的帧就认为是帧碎片，因为传输2端都在传输造成冲突，2端数据在网络中都只有1部分，即不完整，产生碎片）。
在无线网中由于有隐藏结点（即每个结点不知道也不可能知道整个网络的实时情况），因此无法“检测”所以CSMA/CA（CSMA with Collision Avoidance）载波侦听多路访问冲突避免 就应运而生了，它是利用RTS/CTS（即类似TCP的握手协议)的应答策略来保证在传输中结点不会再接受请求，从而解决了无线网中的冲突。
总之：先听后发，边听边发，冲突不发，稍后再发

### CSMA/CD(collision detection)

CSMA依然会导致碰撞的发生：两个节点无法互相了解彼此的传输状态。

CSMA/CD用于有线传输。它可以在短时间内发现碰撞的产生并且阻止其传输，减
少了信道的浪费。

以太网的CSMA/CD算法：

1. 网卡从网络层收到数据包，创建帧
2. 如果网卡检测到信道空闲，开始传输帧；如果检测到信道忙碌，等待直到信道空闲。
3. 如果网卡传输完毕整个帧而没有检测到碰撞，则传输完毕
4. 如果网卡检测到有碰撞发生，则停止传输并且发送阻塞信号(jam signal)
5. 当停止传输时，网卡使用二进制指数补偿方法:在第$m$个碰撞发生时，随机从
   ${2..2^m - 1}$中选取一个$k$，等待$K * 512$个比特时间，返回第二步。
   显然的，碰撞越多，等待时间越长。

### CSMA/CA(collision avoidance)

#### 隐藏节点问题

假设节点A,B,C，A与C只能向B进行信号传输。这意味着A与C不知道彼此之间的信
息。当A向B发送信息时，C的侦测认为BC是空闲的，于是C也发送信息。这时，碰
撞会在B节点发生，而A与C的碰撞检测全部失效。我们说这种情况下，A对C隐藏
(A is hidden for C)。

隐藏节点问题往往在无线网络通信中发生，需要在接收方进行载波检测。

"虚拟载波感应"(virtual carrier sensing)：发送者询问接收者是否能"听到"
别的节点发来的信息，如果是，则认为信道忙碌。

#### 无线局域网与CSMA/CA

由于无线网络的开放性，碰撞检测在这种环境下很容易失效。我们使用碰撞避免
方法来处理这种情况。发送方向接收方发送一个小型的请求信息，接收方向所有
的相邻节点返回一个"clear to send"信息。


# 局域网(Local Area Network, LAN)

局域网（Local Area Network，LAN）是在一个局部的地理范围内（如一个学校、
工厂和机关内），一般是方圆几千米以内，将各种计算机，外部设备和数据库等
互相联接起来组成的计算机通信网。 -- 百度百科


## 寻址

### MAC地址

在局域网中使用，用于从物理上相互连接的接口得到帧。通常而言，MAC地址为
48位，被烧录在NIC的ROM中，有的时候可以被软件所设置。

MAC地址被IEEE所管理，制造商购买一个特定的地址空间来保证元件的独特性。

同IP地址的关系：

MAC有独特性，而IP地址则是区域共享的。


## 以太网(Ethernet)

以太网(Ethernet)指的是由Xerox公司创建并由Xerox、Intel和DEC公司联合开发的基带局域网规范，是当今现有局域网采用的最通用的通信协议标准。以太网络使用CSMA/CD（载波监听多路访问及冲突检测）技术，并以10M/S的速率运行在多种类型的电缆上。以太网与IEEE802.3系列标准相类似。

以太网协议在网卡之间没有握手行为，所以是无连接(connectionless)的；接收方不返回"acks"/"nacks"给发送网卡，所以是不可靠(unreliable)的。丢失帧中的数据只在更高层级中规定了才恢复，否则数据就直接丢失。

以太网的MAC协议：无追踪的CSMA/CD，使用二进制补偿方法。

### 物理拓扑

总线型bus:在90年代中期比较流行，所有的节点在一个碰撞域之中(可以互相碰撞)。

星型star:现在比较常用，在中心有一个转换节点，每一个"辐条"(spoke)上运行一个独立的以太网协议，互相之间不发生碰撞。

## 扩展
### LAN的距离极限

MAC协议，比如CSMA/CD需要与导线长度成比例的时间;同时信号强度也会随着距离而衰减。

另外，网络设计者需要在一定的成本之下，考虑容量，延迟与距离的取舍。

### 光纤的光学扩展

光纤调制解调器可以在计算机与收发机之间扩展链接。

>                                收发机->Ethernet
>                                 ^ 
> 计算机->MODEM------------------MODEM

### 中继器(repeater)

中继器将以太网段(segments)连接起来，它只放大信号强度，不关心帧信息。
中继器只处理信号强度，不处理延迟。光纤调制解调器可以在中继器与长距离扩展之间使用。

中继器的最大问题是，它会将错误与碰撞信号一起增强传输。



以太网标准规定在两个计算机之间不应有多于4个的中继器。

> |---R1---segment1,floor1---R4---segment2,floor1---
> |
> |---R2---segment1,floor2---R5---segment2,floor2---
> |
> |---R3---segment1,floor3---R6---segment2,floor3---


### 桥(bridges)

桥可以将两个段之间连接起来，但是在帧层次使用。
使用混杂模式(promiscuous，真是个好词……)并且传送所有的帧。但是，错误帧，比如噪音与碰撞，例外。


一个例子：

>------segment 1------Bridge------segment 2------
> u v w                                    x y z

<table summary="段的例子">
<tr>
<th>事件</th>
<th>段1列表</th>
<th>段2列表</th>
</tr>

<tr>
<td>桥引导</td>
<td>-</td>
<td>-</td>
</tr>

<tr>
<td>u to v</td>
<td>u</td>
<td>-</td>
</tr>


<tr>
<td>v to u</td>
<td>u,v</td>
<td>-</td>
</tr>


<tr>
<td>z广播</td>
<td>u,v</td>
<td>z</td>
</tr>


<tr>
<td>y to v</td>
<td>u,v</td>
<td>z,y</td>
</tr>


<tr>
<td>y to x</td>
<td>u,b</td>
<td>z,y</td>
</tr>


<tr>
<td>x to w</td>
<td>u,v</td>
<td>z,y,x</td>
</tr>


<tr>
<td>w to z</td>
<td>u,v,w</td>
<td>z,y,x</td>
</tr>


</table>


#### 帧过滤(frame filtering)

只有在需要传送帧的时候才是必要的。

- 目标是另一个段(segment)
- 使用广播地址

桥知道计算机在哪一段，并且知道帧发送的时间。

当帧到达桥时，解压缩源地址，更新信息，并且检查目标地址用于传输。


### 转换器(switching)

一个简单的在计算机之间传送帧的电子设备。

鉴于集线器(hub)模拟了共享介质，转换器模拟了每个计算机一段的桥接的局域网。

好处在于由于平行，可以传送更大的数据量。有些情况下，使用集线器跟转换器来减少成本。

